import{a as d,g as h}from"./C29uwpdd.js";import{d as e}from"./CAFlqnyI.js";import{U as y}from"./C9_ey-L1.js";const m=()=>{const r=d("habit-logs",()=>({})),t=d("routine-logs",()=>({})),c=d("stats-loading",()=>!0),g=async()=>{c.value=!0;try{const n=await e.habitLogs.toArray(),b=await e.routineLogs.toArray();Object.assign(r.value,Object.fromEntries(n.map(i=>[i.id,i]))),Object.assign(t.value,Object.fromEntries(b.map(i=>[i.id,i])))}catch(n){console.error("Failed to load stats:",n)}finally{c.value=!1}};return console.debug("stats init scheduled"),y(async()=>{console.debug("stats init started");try{await g()}catch(n){console.error("stats init error",n)}console.debug("stats init finished")}),{habitLogs:r,routineLogs:t,loadStats:g,statsLoading:c}},R=()=>{const{habitLogs:r,routineLogs:t,loadStats:c,statsLoading:g}=m();return{habitLogs:r,routineLogs:t,statsLoading:g,getRoutineLog:async a=>{if(t.value[a]!==void 0)return t.value[a];const s=await e.routineLogs.get(a);if(s===void 0)throw new Error(`RoutineLog not found: ${a}`);return t.value[a]=s,s},createRoutineLog:async(a,s=[])=>{let u=h("routinelog");const o={id:u,routineId:a,date:new Date().toISOString().split("T")[0],habitLogIds:s};return await e.routineLogs.add(o),t.value[u]=o,u},createHabitLog:async(a,s,u,o,f=new Date().toISOString().split("T")[0])=>{let l=h("habitlog");const L={id:l,habitId:a,status:s,durationSec:u,asPartOfRoutineLog:o,date:f};return e.transaction("rw",e.habitLogs,e.routineLogs,async()=>{o!==null&&await e.routineLogs.where("id").equals(o).modify(w=>{w.habitLogIds.push(l)}),await e.habitLogs.add(L)}),o!==null&&t.value[o].habitLogIds.push(l),r.value[l]=L,l}}};export{R as u};
